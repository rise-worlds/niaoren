package com.tendcloud.tenddata;

import android.util.Base64;
import dice.data.Instance;
import dice.data.Instances;
import dice.data.SimpleInstances;
import dice.tree.model.CBRRDTModel;
import dice.tree.structure.Node;
import java.lang.reflect.Array;
import org.json.JSONArray;
import org.json.JSONObject;

/* compiled from: td */
/* renamed from: com.tendcloud.tenddata.fw */
/* loaded from: classes2.dex */
public class C2895fw implements AbstractC2885fn {

    /* renamed from: f */
    private CBRRDTModel f14009f;

    /* renamed from: a */
    private int f14004a = 31;

    /* renamed from: b */
    private int f14005b = 7;

    /* renamed from: c */
    private int f14006c = 10;

    /* renamed from: d */
    private int f14007d = 3;

    /* renamed from: e */
    private Node[] f14008e = new Node[this.f14007d];

    /* renamed from: g */
    private int[] f14010g = {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, 2, 2, 2, 2, 2, 2};

    /* renamed from: h */
    private String f14011h = "";

    /* JADX INFO: Access modifiers changed from: package-private */
    public C2895fw() {
        try {
            m15668a(new String(C2855es.m15785c(Base64.decode(this.f14011h, 0))));
            this.f14009f = new CBRRDTModel();
            this.f14009f.init(this.f14008e, this.f14010g, this.f14006c);
        } catch (Throwable th) {
            C2933hb.postSDKError(th);
        }
    }

    /* renamed from: b */
    private double[][] m15663b(C2897fy[] fyVarArr, int i, int i2) {
        try {
            double[][] dArr = (double[][]) Array.newInstance(double.class, 1, this.f14004a);
            dArr[0] = new double[this.f14004a];
            C2896fx fxVar = new C2896fx();
            fxVar.m15661a(fyVarArr, i, i2);
            System.arraycopy(fxVar.m15662a(), 0, dArr[0], 0, 24);
            if (24 != this.f14004a - this.f14005b) {
                return null;
            }
            m15665a(dArr, 24);
            return dArr;
        } catch (Throwable th) {
            C2933hb.postSDKError(th);
            return null;
        }
    }

    @Override // com.tendcloud.tenddata.AbstractC2885fn
    /* renamed from: a */
    public double[] mo15666a(C2897fy[] fyVarArr, int i, int i2) {
        return m15669a(new SimpleInstances(this.f14010g, m15663b(fyVarArr, i, i2), null, "MultiLabelData"));
    }

    /* renamed from: a */
    private void m15668a(String str) {
        if (str != null && !str.trim().isEmpty()) {
            try {
                JSONObject jSONObject = new JSONObject(str);
                this.f14004a = jSONObject.getInt("attrSize");
                this.f14005b = jSONObject.getInt("labelNum");
                this.f14006c = jSONObject.getInt("maxS");
                this.f14007d = jSONObject.getInt("treeNum");
                m15667a(jSONObject.getJSONArray("trees"));
                m15664b(jSONObject.getString("attributes"));
            } catch (Throwable th) {
                C2933hb.postSDKError(th);
            }
        }
    }

    /* renamed from: b */
    private void m15664b(String str) {
        if (str != null && !str.isEmpty()) {
            try {
                String[] split = str.split(",");
                int length = split.length;
                this.f14010g = new int[length];
                for (int i = 0; i < length; i++) {
                    this.f14010g[i] = Integer.parseInt(split[i].trim());
                }
            } catch (Throwable th) {
                C2933hb.postSDKError(th);
            }
        }
    }

    /* renamed from: a */
    private void m15667a(JSONArray jSONArray) {
        if (jSONArray != null) {
            for (int i = 0; i < jSONArray.length(); i++) {
                try {
                    this.f14008e[i] = (Node) C2904ge.m15629a(jSONArray.getJSONObject(i).getString("tree"));
                } catch (Throwable th) {
                    C2933hb.postSDKError(th);
                    return;
                }
            }
        }
    }

    /* renamed from: a */
    private double[] m15669a(Instances instances) {
        Double d;
        try {
            CBRRDTModel.Prediction estimate = this.f14009f.estimate((Instance) instances.iterator().next());
            double[] dArr = new double[this.f14005b];
            for (int i = 0; i < this.f14005b; i++) {
                if (estimate.dist == null || !estimate.dist.containsKey(Integer.valueOf(i))) {
                    d = null;
                } else {
                    d = (Double) estimate.dist.get(Integer.valueOf(i));
                }
                if (d == null) {
                    dArr[i] = 0.0d;
                } else {
                    dArr[i] = d.doubleValue();
                }
            }
            return dArr;
        } catch (Throwable th) {
            C2933hb.postSDKError(th);
            return null;
        }
    }

    /* renamed from: a */
    private void m15665a(double[][] dArr, int i) {
        while (i < this.f14004a) {
            try {
                dArr[0][i] = 0.0d;
                i++;
            } catch (Throwable unused) {
                return;
            }
        }
    }
}
